d bin dev etc mnt proc tmp
d var/run var/spool var/lock var/tmp var/log/YaST2 var/adm/mount
d var/lib/YaST var/lib/dhcpcd var/lib/hardware

d var/X11R6/xkb/compiled var/X11R6/bin var/X11R6/app-defaults etc/X11 var/lib/xkb
s /usr/X11R6/lib/X11 var/X11R6/lib

d modules
d dev/usb
d mounts
d root

t var/run/utmp

c 1777 0 0 tmp

aaa_base:
  /etc/nsswitch.conf

if arch eq 's390' || arch eq 's390x'

#  include initrd_s390.file_list
###################################################################
  # ???

  # In the ramdisk we need everything to set up the network.  We
  # additionaly want everything to initialize a local dasd, to fetch
  # the yast image via ftp and to install from that dasd.

  # there is no need to log in into this ramdisk, because you either
  # use the HMC or VM, which are both secured by other means.

  fillup:
    /bin
    /var/adm/fillup-templates

  aaa_base: prein,postin
  e prein
    # wie geht das jetzt??
    #/etc/init.d/network
    #/etc/init.d/route
    # for ssh key generation?
    /etc/init.d/random
    /etc/ld.so.conf
    /etc/rc.status
    /etc/{modules.conf,insserv.conf}
    /root
    /sbin/get_kernel_version
    /sbin/insserv
    /var/adm/fillup-templates
  e postin
  r /var/adm/fillup-templates
  r /root/.exrc
  r /root/.xinitrc
  if suse_release >= 8.1
  filesystem:
  else
  aaa_dir:
  endif
    /
  glibc:
    /etc/nscd.conf
    /etc/rpc
    /lib*/ld*.so*
    /lib*/ld[-.]*.so
    /lib*/libc.so.*
    /lib*/libcrypt.so.*
    /lib*/libdl.so.*
    #/lib*/libm.so.*
    #/lib*/libmemusage.so
    /lib*/libnsl.so.*
    /lib*/libnss_compat.so.*
    /lib*/libnss_dns.so.*
    /lib*/libnss_files.so.*
    /lib*/libnss_hesiod.so.*
    /lib*/libnss_nis.so.*
    /lib*/libnss_nisplus.so.*
    #/lib*/libpcprofile.so
    /lib*/libpthread.so.*
    /lib*/libresolv.so.*
    /lib*/librt.so.*
    #/lib*/libthread_db.so.*
    /lib*/libutil.so.*
  sed:
    /bin/sed
  tar:
    /bin/tar
  #base:
    # /usr/sbin/freeramdisk ?
    # /usr/sbin/ksymoops ?
  bash:
    /bin/bash
    /bin/sh
  s390-tools:
    # are these really needed before the installation system is mounted?
    /sbin/fdasd
    /sbin/dasdfmt
    /lib*/libvtoc.so*
  libxcrypt:
    /lib*/libxcrypt.so*
  cracklib:
    /usr/lib*/libcrack.so*
  gdbm:
    /usr/lib*/libgdbm.so*
  attr:
    /lib*/libattr.so.*
  acl:
    /lib*/libacl.so.*
  popt:
    /usr/lib*/libpopt.so.0
    /usr/lib*/libpopt.so.0.0.0
  samba-client:
    m /usr/lib*/samba/classic/smbmount /bin/smbmount
    m /usr/lib*/samba/classic/smbmnt /bin/smbmnt
    # to make mount(8) -t smbfs work:
    l /bin/smbmount  /sbin/mount.smbfs
    # /lib*/libnss_wins.so?
    /etc/samba/smb.conf
    /usr/share/samba/codepages/codepage.850
    /usr/share/samba/codepages/unicode_map.850
    /usr/share/samba/codepages/unicode_map.ISO8859-1
    /usr/share/samba/codepages/unicode_map.ISO8859-15
  cups-libs:
    /usr/lib*/libcups.so.*
  installation-kernel-rdripl:
    /lib*/modules
  <kernel_rpm>:
    m /boot/System.map-* /System.map
  e2fsprogs:
    /lib*/libcom_err.so.*
    /lib*/libcom_err.so.*
    /lib*/libe2p.so.*
    /lib*/libe2p.so.2.*
    /lib*/libext2fs.so.*
    /lib*/libext2fs.so.*
    /lib*/libss.so.*
    /lib*/libss.so.2.*
    /lib*/libuuid.so.*
    /lib*/libuuid.so.1.*
    /sbin/badblocks
    /sbin/debugfs
    /sbin/dumpe2fs
    /sbin/e2fsck
    /sbin/e2label
    /sbin/fsck
    /sbin/fsck.ext2
    /sbin/fsck.ext3
    /sbin/mke2fs
    /sbin/mkfs.ext2
    /sbin/resize2fs
    /sbin/tune2fs
    /usr/bin/chattr
    /usr/bin/lsattr
    /usr/bin/uuidgen
  fileutils:
    /bin/chgrp
    /bin/chmod
    /bin/chown
    /bin/cp
    /bin/dd
    /bin/df
    /bin/ln
    /bin/ls
    /bin/mkdir
    /bin/mknod
    /bin/mv
    /bin/rm
    /bin/rmdir
    /bin/sync
    /bin/touch
  modutils:
    /sbin/insmod
    /sbin/rmmod
    /sbin/lsmod
    /sbin/modprobe
    /sbin/ksyms
    /sbin/kallsyms
  net-tools:
    #/bin/dnsdomainname
    #/bin/domainname
    /bin/hostname
    #/bin/netstat
    #/sbin/arp
    /sbin/ifconfig
    #/sbin/ipmaddr
    #/sbin/iptunnel
    #/sbin/mii-tool
    /sbin/route
  nfs-utils:
    #/etc/init.d/nfsserver
    /sbin/rpc.lockd
    /sbin/rpc.statd
    #/usr/sbin/exportfs
    #/usr/sbin/nfsstat
    #/usr/sbin/nhfsgraph
    #/usr/sbin/nhfsnums
    #/usr/sbin/nhfsrun
    #/usr/sbin/nhfsstone
    #/usr/sbin/rcnfsserver
    #/usr/sbin/rpc.mountd
    #/usr/sbin/rpc.nfsd
    #/usr/sbin/showmount
    #/usr/share/doc/packages/nfs-utils
    #/var/adm/fillup-templates/rc.config.knfsd
    #/var/lib/nfs/etab
    #/var/lib/nfs/rmtab
    #/var/lib/nfs/sm
    #/var/lib/nfs/sm.bak
    #/var/lib/nfs/state
    #/var/lib/nfs/xtab

  netcfg:
    #/etc/diphosts
    #/etc/exports
    #/etc/ftpusers
    #/etc/host.conf
    #/etc/hosts
    #/etc/hosts.allow
    #/etc/hosts.deny
    #/etc/hosts.equiv
    #/etc/hosts.lpd
    #/etc/inetd.conf
    #/etc/networks
    /etc/protocols
    #/etc/services
    #/var/adm/setup
    #/var/adm/setup/setup.netconfig
  telnet-server:
    /usr/sbin/in.telnetd
  grep:
    /bin/grep
  ed:
    /bin/ed
  pam:
    /etc
    /lib*
    /sbin
  pam-modules:
    # which ones of these are _really_ needed?
    /etc
    /lib*
    /sbin

    # don't use cracklib
    c 755 0 0 /etc/security
    R s/^(password:.*?)\s+use_cracklib\b/$1/ /etc/security/pam_pwcheck.conf

  zlib:
    /lib*/libz.so*
  shadow:
    /usr/sbin/chpasswd
    /bin/login
    /etc/login.defs
    /etc/pam.d/login
    /etc/pam.d/passwd
    /usr/sbin/groupadd
    /usr/sbin/useradd
  iputils:
    /bin/ping
    /bin/ping6
    /usr/sbin/tracepath
    /usr/sbin/tracepath6
  portmap:
    /etc/init.d/portmap
    /sbin/portmap
    #/sbin/rcportmap
    #DEBUG/usr/sbin/pmap_dump
    #DEBUG/usr/sbin/pmap_set
  readline:
    /lib*
  tcpd:
    /usr/sbin/tcpd
  textutils:
    /bin/cat
    /bin/sort
    /usr/bin/wc
    /usr/bin/cut
    /usr/bin/head
    /usr/bin/tail
  sh-utils:
    /bin/uname
    /bin/sleep
    /bin/date
    /bin/stty
    /usr/bin/expr
    /usr/bin/chroot
  util-linux:
    /bin
    /sbin
    /usr/bin/wall
    /sbin/pivot_root
    /usr/sbin/freeramdisk
    #/usr/sbin
  ncurses:
    /lib*/libncurses.so.*
  sysvinit:
    m /sbin/halt      /sbin/halt.bin
    m /sbin/reboot    /sbin/reboot.bin
    m /sbin/shutdown  /sbin/shutdown.bin
    /sbin/startproc
    /sbin/checkproc
    /sbin/killproc
  inetd:
    /usr/sbin/inetd
    /etc/init.d/inetd
  openssl:
    /usr/lib*/libcrypto.so.*
    /usr/lib*/libssl.so.*
  openssh: prein
    /etc/ssh
    /etc/ssh/moduli
    /usr/bin/scp
    /usr/bin/ssh-keygen
    /etc/init.d/sshd
    /etc/pam.d/sshd
    /etc/ssh/sshd_config
    # ??? do we need more ssh preconfiguration?
    t /etc/sysconfig/ssh
    /etc/ssh/ssh_config
    /usr/bin/ssh
    /usr/sbin/sshd
    /usr/lib*/ssh
    /var/adm/fillup-templates/sysconfig.ssh
    /var/lib*/sshd
  E prein

  heimdal-lib:
    /etc
    /usr/lib*/libasn1.so.*
    /usr/lib*/libcom_err.so.*
    /usr/lib*/libgssapi.so.*
    /usr/lib*/libkrb5.so.*
    /usr/lib*/libroken.so.*

  db:
    /usr/lib*/libdb-4*.so  

  syslogd:
    /etc/init.d/syslog
    /sbin/klogd
    /sbin/syslogd
    # /var/adm/fillup-templates/rc.config.syslogd
  linuxrc:
    m /usr/sbin/linuxrc /bin/linuxrc

  strace:
    /usr/bin/strace

  x s390/bin/netsetup    /bin/netsetup
  x s390/check           /check
  x s390/etc/motd        /etc/motd
  x s390/etc/syslog.conf /etc/syslog.conf
  x s390/etc/rc.config   /etc/rc.config
  x s390/etc/exports     /etc/exports
  x s390/etc/services    /etc/services
  x s390/etc/inetd.conf  /etc/inetd.conf
  x s390/etc/inittab     /etc/inittab
  x s390/etc/profile     /etc/profile
  x s390/inst_source     /inst_source
  x s390/linuxrc         /linuxrc
  x s390/linuxrc.finish  /linuxrc.finish
  x s390/linuxrc.init    /linuxrc.init
  x s390/linuxrc.config  /linuxrc.config
  x s390/sbin/halt       /sbin/halt
  x s390/sbin/nodns      /sbin/nodns
  x s390/sbin/hotplug    /sbin/hotplug
  x s390/sbin/realchroot /sbin/realchroot

  c 0755 0 0 /linuxrc
  c 0755 0 0 /inst_source
  c 0755 0 0 /bin/netsetup
  c 0755 0 0 /sbin/halt
  c 0755 0 0 /sbin/hotplug
  c 0755 0 0 /sbin/nodns
  c 0755 0 0 /sbin/realchroot

  #
  c 0755 0 0 /etc/profile

  r /sbin/insserv
  r /bin/fillup

  t /var/log/{faillog,lastlog,messages}

  modutils:
    /sbin/depmod
#   E /sbin/depmod -a -F /System.map
  E /sbin/depmod -a -F /System.map <kernel_ver>
  r /sbin/depmod

###################################################################
else # arch is not s390 or s390x

  linuxrc:
    if linuxrc
      if linuxrc =~ m#^[^/]#
        m /usr/sbin/<linuxrc> /linuxrc
      else
        X <linuxrc> /linuxrc
      endif
    else
      m /usr/sbin/linuxrc /linuxrc
    endif

  x etc/syslog.conf etc

endif

x etc/host.conf etc

devs:
  if arch eq 'ppc' || arch eq 'ppc64'
    m /usr/share/doc/packages/devs/makedevs.floppy /
  else
    if arch eq 's390' || arch eq 's390x'
    	/dev/dasd*
	/dev/pts
    endif 
    m /usr/share/doc/packages/devs/makedevs.floppy /
  endif

c 0755 0 0 makedevs.floppy

if arch ne 's390' && arch ne 's390x' && arch ne 'ppc' && arch ne 'ppc64'

kbd:

  d kbd/consoletrans
if arch ne 'sparc' && arch ne 'sparc64'
  m /usr/share/kbd/consoletrans/koi2alt kbd/consoletrans
endif
  m /usr/share/kbd/consoletrans/trivial kbd/consoletrans

  d kbd/consolefonts
  g /usr/share/kbd/consolefonts/lat1-16.psfu.gz kbd/consolefonts/lat1-16.psfu
if arch ne 'sparc' && arch ne 'sparc64'
  g /usr/share/kbd/consolefonts/lat2-16.psfu.gz kbd/consolefonts/lat2-16.psfu
  g /usr/share/kbd/consolefonts/iso07u-16.psfu.gz kbd/consolefonts/lat7-16.psfu
  g /usr/share/kbd/consolefonts/Cyr_a8x16.psfu.gz kbd/consolefonts/Cyr_a8x16.psfu

  d kbd/keymaps/include
  m usr/share/kbd/keymaps/include/compose.latin1 kbd/keymaps/include
endif

if arch eq 'ia32' || arch eq 'ppc' || arch eq 'ia64' || arch eq 'mips'
  if !fewkeymaps
    g /usr/share/kbd/keymaps/i386/qwerty/Pl02.map.gz kbd/keymaps/Pl02.map
    g /usr/share/kbd/keymaps/i386/qwerty/br-abnt2.map.gz kbd/keymaps/br-abnt2.map
    g /usr/share/kbd/keymaps/i386/qwertz/cz-us-qwertz.map.gz kbd/keymaps/cz-us-qwertz.map
    g /usr/share/kbd/keymaps/i386/qwerty/dk.map.gz kbd/keymaps/dk.map
    g /usr/share/kbd/keymaps/i386/qwerty/es.map.gz kbd/keymaps/es.map
    g /usr/share/kbd/keymaps/i386/qwerty/fi.map.gz kbd/keymaps/fi.map
    g /usr/share/kbd/keymaps/i386/qwerty/gr.map.gz kbd/keymaps/gr.map
    g /usr/share/kbd/keymaps/i386/qwertz/hu.map.gz kbd/keymaps/hu.map
    g /usr/share/kbd/keymaps/i386/qwerty/it.map.gz kbd/keymaps/it.map
    g /usr/share/kbd/keymaps/i386/qwerty/nl.map.gz kbd/keymaps/nl.map
    g /usr/share/kbd/keymaps/i386/qwerty/no-latin1.map.gz kbd/keymaps/no-latin1.map
    g /usr/share/kbd/keymaps/i386/qwerty/pt-latin1.map.gz kbd/keymaps/pt-latin1.map
    g /usr/share/kbd/keymaps/i386/qwerty/ru1.map.gz kbd/keymaps/ru1.map
    g /usr/share/kbd/keymaps/i386/qwerty/sk-qwerty.map.gz kbd/keymaps/sk-qwerty.map
    g /usr/share/kbd/keymaps/i386/qwerty/uk.map.gz kbd/keymaps/uk.map
    g /usr/share/kbd/keymaps/i386/azerty/fr-latin1.map.gz kbd/keymaps/fr-latin1.map

    m /usr/share/kbd/keymaps/i386/include/linux-with-modeshift-altgr.inc kbd/keymaps/include
    m /usr/share/kbd/keymaps/i386/include/linux-keys-extd.inc kbd/keymaps/include
    m /usr/share/kbd/keymaps/i386/include/azerty-layout.inc kbd/keymaps/include
  endif

  g /usr/share/kbd/keymaps/i386/qwerty/us.map.gz kbd/keymaps/us.map
  g /usr/share/kbd/keymaps/i386/qwertz/de-lat1-nd.map.gz kbd/keymaps/de-lat1-nd.map
  g /usr/share/kbd/keymaps/i386/qwertz/de-latin1.map.gz kbd/keymaps/de-latin1.map

  m /usr/share/kbd/keymaps/i386/include/linux-keys-bare.inc kbd/keymaps/include
  m /usr/share/kbd/keymaps/i386/include/linux-with-alt-and-altgr.inc kbd/keymaps/include
  m /usr/share/kbd/keymaps/i386/include/qwerty-layout.inc kbd/keymaps/include
  m /usr/share/kbd/keymaps/i386/include/qwertz-layout.inc kbd/keymaps/include
  g /usr/share/kbd/keymaps/i386/include/euro1.map.gz kbd/keymaps/include/euro1.map
  g /usr/share/kbd/keymaps/i386/include/euro2.map.gz kbd/keymaps/include/euro2.map
endif

if arch eq 'ppc'
  m /usr/share/kbd/keymaps/mac/include/mac-{azerty-layout,qwerty-layout,linux-keys-bare}.inc kbd/keymaps/include
  g /usr/share/kbd/keymaps/mac/include/mac-euro.map.gz kbd/keymaps/include/mac-euro.map
  g /usr/share/kbd/keymaps/mac/all/mac-be.map.gz kbd/keymaps/mac-be.map
  g /usr/share/kbd/keymaps/mac/all/mac-de-latin1-nodeadkeys.map.gz kbd/keymaps/mac-de-latin1-nodeadkeys.map
  g /usr/share/kbd/keymaps/mac/all/mac-de-latin1.map.gz kbd/keymaps/mac-de-latin1.map
  g /usr/share/kbd/keymaps/mac/all/mac-de_CH.map.gz kbd/keymaps/mac-de_CH.map
  g /usr/share/kbd/keymaps/mac/all/mac-dk-latin1.map.gz kbd/keymaps/mac-dk-latin1.map
  g /usr/share/kbd/keymaps/mac/all/mac-es.map.gz kbd/keymaps/mac-es.map
  g /usr/share/kbd/keymaps/mac/all/mac-fi-latin1.map.gz kbd/keymaps/mac-fi-latin1.map
  g /usr/share/kbd/keymaps/mac/all/mac-fr.map.gz kbd/keymaps/mac-fr.map
  g /usr/share/kbd/keymaps/mac/all/mac-it.map.gz kbd/keymaps/mac-it.map
  g /usr/share/kbd/keymaps/mac/all/mac-se.map.gz kbd/keymaps/mac-se.map
  g /usr/share/kbd/keymaps/mac/all/mac-uk.map.gz kbd/keymaps/mac-uk.map
  g /usr/share/kbd/keymaps/mac/all/mac-us.map.gz kbd/keymaps/mac-us.map
endif

if arch eq 'sparc' || arch eq 'sparc64'
  d kbd/keymaps
  g /usr/share/kbd/keymaps/sun/sunkeymap.map.gz kbd/keymaps/sunkeymap.map
  g /usr/share/kbd/keymaps/sun/sunt4-es.map.gz kbd/keymaps/sunt4-es.map
  g /usr/share/kbd/keymaps/sun/sunt4-fi-latin1.map.gz kbd/keymaps/sunt4-fi-latin1.map
  g /usr/share/kbd/keymaps/sun/sunt4-no-latin1.map.gz kbd/keymaps/sunt4-no-latin1.map
  g /usr/share/kbd/keymaps/sun/sunt5-de-latin1.map.gz kbd/keymaps/sunt5-de-latin1.map
  g /usr/share/kbd/keymaps/sun/sunt5-es.map.gz kbd/keymaps/sunt5-es.map
  g /usr/share/kbd/keymaps/sun/sunt5-fi-latin1.map.gz kbd/keymaps/sunt5-fi-latin1.map
  g /usr/share/kbd/keymaps/sun/sunt5-fr-latin1.map.gz kbd/keymaps/sunt5-fr-latin1.map
  g /usr/share/kbd/keymaps/sun/sunt5-ru.map.gz kbd/keymaps/sunt5-ru.map
  g /usr/share/kbd/keymaps/sun/sunt5-uk.map.gz kbd/keymaps/sunt5-uk.map
endif

endif # not on s390/ppc

if (arch eq 'alpha' || arch eq 'ia32') && !nopcmcia
  pcmcia:
  d etc/pcmcia/cis
  m etc/pcmcia/cis etc/pcmcia
  t etc/pcmcia/fixed
  c 0755 0 0 etc/pcmcia/fixed
  l etc/pcmcia/fixed  etc/pcmcia/scsi
  l etc/pcmcia/fixed  etc/pcmcia/ide
  l etc/pcmcia/fixed  etc/pcmcia/network

    /etc/pcmcia/config
    /etc/pcmcia/config.opts
  x etc/pcmcia/fixed etc/pcmcia

  if suse_release == 8.1
    p /etc/pcmcia/config.dif
  endif

endif

if with_smb

  d etc/samba
  e echo "; just to make smbmount happy" >etc/samba/smb.conf

  if arch eq 'ia32'

    smbmount-diet:
      m /usr/bin/smbmount /bin/smbmount

  else

    d bin lib

    samba-client:
      m /usr/lib*/samba/classic/smbmount /bin/smbmount

    glibc:
      /lib*/ld-linux*.so.2
      /lib*/ld-2.*.so
      /lib*/libc.so.6*
      /lib*/{libcrypt.so.1*,libdl.so.2*,libnsl.so.1*}

    pam:
      /lib*/libpam.so.*

    cups-libs:
      m /usr/lib*/libcups.so.* /lib

    openssl:
      m /usr/lib*/libcrypto.so.* /lib
      m /usr/lib*/libssl.so.* /lib

  endif

endif

if with_gdb

  gdb:
    m /usr/bin/gdb /bin/gdb

  glibc:
    /lib*/ld-linux*.so.2
    /lib*/ld-2.*.so
    /lib*/libc.so.6*
    /lib*/{libcrypt.so.1*,libdl.so.2*,libnsl.so.1*}
    /lib*/libm.so.6*

  readline:
    /lib*/libreadline.so.4*
    /lib*/libhistory.so.4*

  ncurses:
    /lib*/libncurses.so.5*

  bash:
    /bin/bash
    /bin/sh

  if with_gdb == 2

    linuxrc:
      m /usr/sbin/linuxrc /bin/linuxrc

      e echo run >zap
      e echo -e "#! /bin/sh\ngdb --command /zap /bin/linuxrc" >linuxrc

  endif

endif

if productname
  e echo "Product:	<productname>" >>linuxrc.config
endif

if product eq 'UnitedLinux'
  e echo "ProductDir:	<product>" >>linuxrc.config
  e echo "MemLoadImage:	98304" >>linuxrc.config
endif

if lang
  e echo "Language:	<lang>" >>linuxrc.config
endif

if demo
  e echo "Demo:		1" >>linuxrc.config
endif

  # r /usr/sbin/groupadd
  # r /usr/sbin/useradd
