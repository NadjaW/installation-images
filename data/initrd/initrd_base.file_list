d bin dev etc mnt proc sys tmp
d var/run var/spool var/lock var/tmp var/log/YaST2 var/adm/mount
d var/lib/YaST var/lib/dhcpcd var/lib/hardware

d etc/sysconfig
d etc/sysconfig/hardware

d var/X11R6/xkb/compiled var/X11R6/bin var/X11R6/app-defaults etc/X11 var/lib/xkb
s /usr/X11R6/lib/X11 var/X11R6/lib

d lib/modules/<kernel_ver>
d lib/modules/<kernel_mods>/initrd
s lib/modules/<kernel_mods>/initrd modules
s ../<kernel_mods> lib/modules/<kernel_ver>/updates

d mounts
d root

t var/run/utmp

c 1777 0 0 tmp

if arch eq 'x86_64'
  d lib64
endif

glibc:
  /etc/nsswitch.conf

  linuxrc:
    if linuxrc
      if linuxrc =~ m#^[^/]#
        m /usr/sbin/<linuxrc> /linuxrc
      else
        X <linuxrc> /linuxrc
      endif
    else
      m /usr/sbin/linuxrc /linuxrc
    endif

  x etc/syslog.conf etc

  module-init-tools:
    d /sbin
    m /sbin/insmod.static /sbin/insmod

x etc/host.conf etc

if arch ne 's390' && arch ne 's390x' && arch ne 'ppc' && arch ne 'ppc64'

kbd:

  d kbd/consoletrans
if arch ne 'sparc' && arch ne 'sparc64'
  m /usr/share/kbd/consoletrans/koi2alt kbd/consoletrans
endif
  m /usr/share/kbd/consoletrans/trivial kbd/consoletrans

  d kbd/consolefonts

if 0
  g /usr/share/kbd/consolefonts/LatArCyrHeb-16.psfu.gz kbd/consolefonts/LatArCyrHeb-16.psfu
  g /usr/share/kbd/consolefonts/lat1-16.psfu.gz kbd/consolefonts/lat1-16.psfu
  g /usr/share/kbd/consolefonts/lat2-16.psfu.gz kbd/consolefonts/lat2-16.psfu
  g /usr/share/kbd/consolefonts/iso07u-16.psfu.gz kbd/consolefonts/lat7-16.psfu
  g /usr/share/kbd/consolefonts/Cyr_a8x16.psfu.gz kbd/consolefonts/Cyr_a8x16.psfu
endif

linuxrc:
  g /usr/share/linuxrc/linuxrc-16.psfu.gz kbd/consolefonts/linuxrc-16.psfu
  g /usr/share/linuxrc/linuxrc2-16.psfu.gz kbd/consolefonts/linuxrc2-16.psfu

kbd:

if arch ne 'sparc' && arch ne 'sparc64'
  d kbd/keymaps/include
  m usr/share/kbd/keymaps/include/compose.latin1 kbd/keymaps/include
endif

if arch eq 'ia32' || arch eq 'x86_64' || arch eq 'ppc' || arch eq 'ia64' || arch eq 'mips'
  if !fewkeymaps
    g /usr/share/kbd/keymaps/i386/qwerty/Pl02.map.gz kbd/keymaps/Pl02.map
    g /usr/share/kbd/keymaps/i386/qwerty/br-abnt2.map.gz kbd/keymaps/br-abnt2.map
    g /usr/share/kbd/keymaps/i386/qwertz/cz-us-qwertz.map.gz kbd/keymaps/cz-us-qwertz.map
    g /usr/share/kbd/keymaps/i386/qwerty/dk.map.gz kbd/keymaps/dk.map
    g /usr/share/kbd/keymaps/i386/qwerty/es.map.gz kbd/keymaps/es.map
    g /usr/share/kbd/keymaps/i386/qwerty/fi.map.gz kbd/keymaps/fi.map
    g /usr/share/kbd/keymaps/i386/qwerty/gr.map.gz kbd/keymaps/gr.map
    g /usr/share/kbd/keymaps/i386/qwertz/hu.map.gz kbd/keymaps/hu.map
    g /usr/share/kbd/keymaps/i386/qwerty/it.map.gz kbd/keymaps/it.map
    g /usr/share/kbd/keymaps/i386/qwerty/jp106.map.gz kbd/keymaps/jp106.map
    g /usr/share/kbd/keymaps/i386/qwerty/nl.map.gz kbd/keymaps/nl.map
    g /usr/share/kbd/keymaps/i386/qwerty/no-latin1.map.gz kbd/keymaps/no-latin1.map
    g /usr/share/kbd/keymaps/i386/qwerty/pt-latin1.map.gz kbd/keymaps/pt-latin1.map
    g /usr/share/kbd/keymaps/i386/qwerty/ru1.map.gz kbd/keymaps/ru1.map
    g /usr/share/kbd/keymaps/i386/qwerty/sk-qwerty.map.gz kbd/keymaps/sk-qwerty.map
    g /usr/share/kbd/keymaps/i386/qwerty/sv-latin1.map.gz kbd/keymaps/sv-latin1.map
    g /usr/share/kbd/keymaps/i386/qwerty/uk.map.gz kbd/keymaps/uk.map
    g /usr/share/kbd/keymaps/i386/azerty/fr-latin1.map.gz kbd/keymaps/fr-latin1.map

    m /usr/share/kbd/keymaps/i386/include/linux-with-modeshift-altgr.inc kbd/keymaps/include
    m /usr/share/kbd/keymaps/i386/include/linux-keys-extd.inc kbd/keymaps/include
    m /usr/share/kbd/keymaps/i386/include/azerty-layout.inc kbd/keymaps/include
    m /usr/share/kbd/keymaps/i386/include/linux-with-two-alt-keys.inc kbd/keymaps/include
  endif

  g /usr/share/kbd/keymaps/i386/qwerty/us.map.gz kbd/keymaps/us.map
  g /usr/share/kbd/keymaps/i386/qwertz/de-latin1-nodeadkeys.map.gz kbd/keymaps/de-lat1-nd.map
  g /usr/share/kbd/keymaps/i386/qwertz/de-latin1.map.gz kbd/keymaps/de-latin1.map

  m /usr/share/kbd/keymaps/i386/include/linux-keys-bare.inc kbd/keymaps/include
  m /usr/share/kbd/keymaps/i386/include/linux-with-alt-and-altgr.inc kbd/keymaps/include
  m /usr/share/kbd/keymaps/i386/include/qwerty-layout.inc kbd/keymaps/include
  m /usr/share/kbd/keymaps/i386/include/qwertz-layout.inc kbd/keymaps/include
  g /usr/share/kbd/keymaps/i386/include/euro1.map.gz kbd/keymaps/include/euro1.map
  g /usr/share/kbd/keymaps/i386/include/euro2.map.gz kbd/keymaps/include/euro2.map
endif

if arch eq 'ppc'
  m /usr/share/kbd/keymaps/mac/include/mac-{azerty-layout,qwerty-layout,linux-keys-bare}.inc kbd/keymaps/include
  g /usr/share/kbd/keymaps/mac/include/mac-euro.map.gz kbd/keymaps/include/mac-euro.map
  g /usr/share/kbd/keymaps/mac/all/mac-be.map.gz kbd/keymaps/mac-be.map
  g /usr/share/kbd/keymaps/mac/all/mac-de-latin1-nodeadkeys.map.gz kbd/keymaps/mac-de-latin1-nodeadkeys.map
  g /usr/share/kbd/keymaps/mac/all/mac-de-latin1.map.gz kbd/keymaps/mac-de-latin1.map
  g /usr/share/kbd/keymaps/mac/all/mac-de_CH.map.gz kbd/keymaps/mac-de_CH.map
  g /usr/share/kbd/keymaps/mac/all/mac-dk-latin1.map.gz kbd/keymaps/mac-dk-latin1.map
  g /usr/share/kbd/keymaps/mac/all/mac-es.map.gz kbd/keymaps/mac-es.map
  g /usr/share/kbd/keymaps/mac/all/mac-fi-latin1.map.gz kbd/keymaps/mac-fi-latin1.map
  g /usr/share/kbd/keymaps/mac/all/mac-fr.map.gz kbd/keymaps/mac-fr.map
  g /usr/share/kbd/keymaps/mac/all/mac-it.map.gz kbd/keymaps/mac-it.map
  g /usr/share/kbd/keymaps/mac/all/mac-se.map.gz kbd/keymaps/mac-se.map
  g /usr/share/kbd/keymaps/mac/all/mac-uk.map.gz kbd/keymaps/mac-uk.map
  g /usr/share/kbd/keymaps/mac/all/mac-us.map.gz kbd/keymaps/mac-us.map
endif

if arch eq 'sparc' || arch eq 'sparc64'
  d kbd/keymaps
  g /usr/share/kbd/keymaps/sun/sunkeymap.map.gz kbd/keymaps/sunkeymap.map
  g /usr/share/kbd/keymaps/sun/sunt4-es.map.gz kbd/keymaps/sunt4-es.map
  g /usr/share/kbd/keymaps/sun/sunt4-fi-latin1.map.gz kbd/keymaps/sunt4-fi-latin1.map
  g /usr/share/kbd/keymaps/sun/sunt4-no-latin1.map.gz kbd/keymaps/sunt4-no-latin1.map
  g /usr/share/kbd/keymaps/sun/sunt5-de-latin1.map.gz kbd/keymaps/sunt5-de-latin1.map
  g /usr/share/kbd/keymaps/sun/sunt5-es.map.gz kbd/keymaps/sunt5-es.map
  g /usr/share/kbd/keymaps/sun/sunt5-fi-latin1.map.gz kbd/keymaps/sunt5-fi-latin1.map
  g /usr/share/kbd/keymaps/sun/sunt5-fr-latin1.map.gz kbd/keymaps/sunt5-fr-latin1.map
  g /usr/share/kbd/keymaps/sun/sunt5-ru.map.gz kbd/keymaps/sunt5-ru.map
  g /usr/share/kbd/keymaps/sun/sunt5-uk.map.gz kbd/keymaps/sunt5-uk.map
endif

endif # not on s390/ppc

if (arch eq 'alpha' || arch eq 'ia32' || arch eq 'x86_64') && !nopcmcia
  pcmcia:
  d etc/pcmcia/cis
  m etc/pcmcia/cis etc/pcmcia
  t etc/pcmcia/fixed
  c 0755 0 0 etc/pcmcia/fixed
  l etc/pcmcia/fixed  etc/pcmcia/scsi
  l etc/pcmcia/fixed  etc/pcmcia/ide
  l etc/pcmcia/fixed  etc/pcmcia/network

    /etc/pcmcia/config
    /etc/pcmcia/config.opts
  x etc/pcmcia/fixed etc/pcmcia

  if suse_release == 8.1
    p /etc/pcmcia/config.dif
  endif

endif

if arch eq 's390' || arch eq 's390x' || with_smb

  d etc/samba
  e echo "; just to make smbmount happy" >etc/samba/smb.conf

  if arch eq 'ia32'

    smbmount-diet:
      m /usr/bin/smbmount /bin/smbmount

  else

    d bin lib

    samba-client:
      m /usr/bin/smbmount /bin/smbmount

    glibc:
      if arch eq 'ppc' || arch eq 's390' || arch eq 's390x'
        /lib*/ld*.so.1
      elsif arch eq 'ia64'
        /lib*/ld-linux-ia64.so.2
      else
        /lib*/ld-linux.so.2
      endif
      /lib*/ld-2.*.so
      /lib*/libc.so.6*
      /lib*/{libcrypt.so.1*,libdl.so.2*,libnsl.so.1*}
      /lib*/libresolv.so.*
      /lib*/libpthread.so.*

    pam:
      /lib*/libpam.so.*

    cups-libs:
      m /usr/lib*/libcups.so.* /lib

    openssl:
      m /usr/lib*/libcrypto.so.* /lib
      m /usr/lib*/libssl.so.* /lib

    heimdal-lib:
      m /usr/lib*/libasn1.so.* /lib
      m /usr/lib*/libgssapi.so.* /lib
      m /usr/lib*/libkrb5.so.* /lib
      m /usr/lib*/libroken.so.* /lib
      
    openldap2-client:
      m /usr/lib*/liblber-*.so.* /lib
      m /usr/lib*/libldap-*.so.* /lib
    
    e2fsprogs:
      m /lib*/libcom_err.so.* /lib

    db:
      m /usr/lib*/libdb-4.2.so /lib
    
    cyrus-sasl:
      m /usr/lib*/libsasl2.so.* /lib

  endif

endif

if with_gdb

  kbd:
   /bin/kbd_mode

  iputils:
    /bin/ping

  net-tools:
    m /sbin/{ifconfig,route} /bin

  strace:
    m /usr/bin/strace /bin

  gdb:
    m /usr/bin/gdb /bin/gdb

  glibc:
    /lib*/ld-linux*.so.2
    /lib*/ld-2.*.so
    /lib*/libc.so.6*
    /lib*/{libcrypt.so.1*,libdl.so.2*,libnsl.so.1*,libresolv.so.2*}
    /lib*/{libnss_compat.so.2,libnss_dns.so.2,libnss_files.so.2,libnss_hesiod.so.2}
    /lib*/libm.so.6*
    /lib*/libthread_db.so*

  readline:
    /lib*/libreadline.so*
    /lib*/libhistory.so*

  ncurses:
    /lib*/libncurses.so.5*

  procps:
    /bin/ps

  psmisc:
    /bin/fuser
    m /usr/bin/killall /bin
    m /usr/bin/pstree /bin

  coreutils:
    m /usr/bin/head /bin
    m /usr/bin/tail /bin

  bash:
    /bin/bash
    /bin/sh

  if with_gdb == 2

    linuxrc:
      m /usr/sbin/linuxrc /bin/linuxrc

      e echo -e "#! /bin/sh\nexport PATH=/bin:/sbin:/lbin\nPS1=\\\\\\w\>\n/bin/bash\n" >linuxrc

  endif

  if with_gdb == 3

    linuxrc:
      m /usr/sbin/linuxrc /bin/linuxrc

      e echo run >zap
      e echo -e "#! /bin/sh\ngdb --command /zap /bin/linuxrc" >linuxrc

  endif


  d /lbin
  s /bin/linuxrc /lbin/cp
  s /bin/linuxrc /lbin/mv
  s /bin/linuxrc /lbin/modprobe
  s /bin/linuxrc /lbin/rmmod
  s /bin/linuxrc /lbin/lsmod
  s /bin/linuxrc /lbin/mount
  s /bin/linuxrc /lbin/umount
  s /bin/linuxrc /lbin/cat
  s /bin/linuxrc /lbin/hex
  s /bin/linuxrc /lbin/lsof
  s /bin/linuxrc /lbin/rm
  s /bin/linuxrc /lbin/ln
  s /bin/linuxrc /lbin/ls
  s /bin/linuxrc /lbin/mkdevs
  s /bin/linuxrc /lbin/mkdir
  s /bin/linuxrc /lbin/chroot
  s /bin/linuxrc /lbin/kill
  s /bin/linuxrc /lbin/swapon
  s /bin/linuxrc /lbin/swapoff
  s /bin/linuxrc /lbin/free
  s /bin/linuxrc /lbin/fstype
  s /bin/linuxrc /lbin/lndir
  s /bin/linuxrc /lbin/dhcpcd
  s /bin/linuxrc /lbin/portmap
  s /bin/linuxrc /lbin/lsh
  s /bin/linuxrc /lbin/loadkeys
  s /bin/linuxrc /lbin/dumpkeys
  s /bin/linuxrc /lbin/setfont

endif

if mkdevs
  e cp -a /initrddevs.tiny/dev .
  e cp -a /devz .
else
  e cp -a /initrddevs/dev .
endif

# see etc/module.list
e echo "KernelPCMCIA:	1" >>linuxrc.config

e echo "UseUSBSCSI:	1" >>linuxrc.config
e echo "Product:	<product_name>" >>linuxrc.config
e echo "UpdateDir:	<update_dir>" >>linuxrc.config

if load_image
  if arch eq 'x86_64'
    e echo "MemLoadImage:	307200" >>linuxrc.config
  else
    e echo "MemLoadImage:	<load_image>" >>linuxrc.config
  endif
endif

if min_memory
  e echo "MinMemory:	<min_memory>" >>linuxrc.config
endif

if lang
  e echo "Language:	<lang>" >>linuxrc.config
endif

if liveeval
  e echo "UseIDESCSI:	1" >>linuxrc.config
  e echo "LiveConfig:	suselive.900" >>linuxrc.config
endif

if arch eq 'ppc' || arch eq 's390' || arch eq 's390x'
  e echo "Linemode:	1" >>linuxrc.config
endif

# min. free kB for X11 YaST (below ncurses will be used)
e echo "MemYaST:	64000" >>linuxrc.config

# min. free kB for ncurses YaST (below swap will be activated)
e echo "MemYaSTText:	64000" >>linuxrc.config


if arch eq 'x86_64'
e echo "InstallDir:	/boot/inst-sys64" >>linuxrc.config
e echo "RescueImage:	/boot/rescue64" >>linuxrc.config
e echo "RootImage:	/boot/root64" >>linuxrc.config
endif

