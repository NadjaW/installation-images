# common part for all initrds
include initrd_base.file_list

if !(arch eq 's390' || arch eq 's390x')
<kernel_rpm>:

if extramod
  f / <extramod>.o /modules
  f / af_packet.o /modules
endif

x module.help modules/module.config

# for ia32 we support 2 different initrd sizes: 'small' and 'large'
# 'small'     : bootdisk
# 'large'     : no size limit
# no longer supported: '': 2.88MB image

if (arch eq 'ia32' || arch eq 'x86_64') && initrd eq 'small'

  # for ia32/x86_64 boot disks

  include gen/module.files.autoload
  if !nousb
    include gen/module.files.usb
    include gen/module.files.firewire
  endif

  # note: order _does_ matter
  A gen/module.config.autoload modules/module.config
  A gen/module.shortconfig.scsi@2 modules/module.config
  A gen/module.shortconfig.cdrom modules/module.config
  A gen/module.shortconfig.net modules/module.config
  A gen/module.shortconfig.pcmcia modules/module.config
  if nousb
    A gen/module.shortconfig.usb modules/module.config
    A gen/module.shortconfig.firewire modules/module.config
  else
    A gen/module.config.usb modules/module.config
    A gen/module.config.firewire modules/module.config
  endif
  A gen/module.shortconfig.fs modules/module.config
  A gen/module.config.other modules/module.config

elsif (arch eq 'ia32' || arch eq 'x86_64') && initrd eq 'medium'

  # for ia32 CD2 image

  include gen/module.files.autoload
  include gen/module.files.usb

  # note: order _does_ matter
  A gen/module.config.autoload modules/module.config
  A gen/module.shortconfig.scsi@2 modules/module.config
  A gen/module.shortconfig.cdrom modules/module.config
  A gen/module.shortconfig.net modules/module.config
  A gen/module.shortconfig.pcmcia modules/module.config
  A gen/module.config.usb modules/module.config
  A gen/module.shortconfig.firewire modules/module.config
  A gen/module.shortconfig.fs modules/module.config
  A gen/module.config.other modules/module.config

elsif arch eq 'ppc'

if initrd eq 'initrd'
  include gen/module.files.net
  A gen/module.config.net modules/module.config
endif
if initrd eq 'initrd_ppc_pmac_new'
  include gen/module.files.autoload
  include gen/module.files.ppc_pmac_new
  include gen/module.files.usb
  include gen/module.files.firewire
  A gen/module.config.autoload modules/module.config
  A gen/module.config.ppc_pmac_new modules/module.config
  A gen/module.config.usb modules/module.config
  A gen/module.config.firewire modules/module.config
endif
if initrd eq 'initrd_ppc_pmac_miboot'
  include gen/module.files.autoload
  include gen/module.files.ppc_pmac_miboot
  include gen/module.files.usb
  include gen/module.files.firewire
  A gen/module.config.autoload modules/module.config
  A gen/module.config.ppc_pmac_miboot modules/module.config
  A gen/module.config.usb modules/module.config
  A gen/module.config.firewire modules/module.config
endif
if initrd eq 'initrd_ppc_pmac_coff'
  include gen/module.files.autoload
  include gen/module.files.ppc_pmac_coff
  include gen/module.files.firewire
  A gen/module.config.autoload modules/module.config
  A gen/module.config.ppc_pmac_coff modules/module.config
  A gen/module.config.firewire modules/module.config
endif
if initrd eq 'initrd_ppc_chrp'
  include gen/module.files.autoload
  include gen/module.files.ppc_chrp
  A gen/module.config.autoload modules/module.config
  A gen/module.config.ppc_chrp modules/module.config
endif
if initrd eq 'initrd_ppc_prep'
  include gen/module.files.autoload
  include gen/module.files.ppc_prep
  A gen/module.config.autoload modules/module.config
  A gen/module.config.ppc_prep modules/module.config
endif
if initrd eq 'initrd_ppc_power3'
  include gen/module.files.autoload
  include gen/module.files.ppc_power3
  A gen/module.config.autoload modules/module.config
  A gen/module.config.ppc_power3 modules/module.config
endif
if initrd eq 'initrd_ppc_pseries64'
  include gen/module.files.autoload
  include gen/module.files.ppc_pseries64
  include gen/module.files.usb
  A gen/module.config.autoload modules/module.config
  A gen/module.config.ppc_pseries64 modules/module.config
  A gen/module.config.usb modules/module.config
endif
if initrd eq 'initrd_ppc_iseries64'
  include gen/module.files.autoload
  include gen/module.files.ppc_iseries64
  A gen/module.config.autoload modules/module.config
  A gen/module.config.ppc_iseries64 modules/module.config
endif

else

  # all other archs with no restrictions to initrd size

  include gen/module.files.autoload
  include gen/module.files.cdrom
  include gen/module.files.firewire
  include gen/module.files.fs
  include gen/module.files.net
  include gen/module.files.pcmcia
  include gen/module.files.scsi
  include gen/module.files.scsi@2
  include gen/module.files.usb
  # not strictly necessary
  include gen/module.files.other

  # note: order _does_ matter
  A gen/module.config.autoload modules/module.config
  A gen/module.config.scsi modules/module.config
  A gen/module.config.scsi@2 modules/module.config
  A gen/module.config.cdrom modules/module.config
  A gen/module.config.net modules/module.config
  A gen/module.config.pcmcia modules/module.config
  A gen/module.config.usb modules/module.config
  A gen/module.config.firewire modules/module.config
  A gen/module.config.fs modules/module.config

  # for those that don't put these modules into inst-sys
  # cf. data/root/root.file_list
  if arch eq 'ppc' || arch eq 'ia64' || arch eq 'sparc' || arch eq 'sparc64' || arch eq 's390' || arch eq 's390x'
    include gen/module.files.extra
    A gen/module.config.extra modules/module.config
  endif

  A gen/module.config.other modules/module.config

endif

else
  x s390/bin/remove-empty-directories bin/remove-empty-directories
  x s390/etc/initrd_keep_files etc/initrd_keep_files
  c 0755 0 0 bin/remove-empty-directories
  # the inst-sys is symlinked to from the initrd.  To avoid
  # symlinks for each file in empty directories of the initrd, these
  # empty directories are removed now.
  e bin/remove-empty-directories etc/initrd_keep_files
  r bin/remove-empty-directories
  r etc/initrd_keep_files
endif # not arch s390

# add modules.pcimap
e /sbin/depmod -a -b . -F /System.map <kernel_ver>
if !(arch eq 's390' || arch eq 's390x')
  e rm -f lib/modules/<kernel_ver>/modules.[^p]*
endif
