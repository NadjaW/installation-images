#
# the 'root' system
#

d bin dev etc lib mnt root sbin tmp usr var
c 1777 0 0 tmp

# add some /etc files
x /etc/* /etc
r /etc/ssh/CVS
r /etc/CVS /etc/rpm/CVS /root/.ssh/CVS
r /etc/inst_setup
r /etc/inst_setup_ssh
r /etc/create_interface
R s/product_name/<product_name>/ /etc/motd
R s/product_name/<product_name>/ /etc/issue

fillup:
  /bin
  /var/adm/fillup-templates

aaa_base: prein,postin
e prein
  /etc/init.d
  /etc/{modules.conf,insserv.conf,inputrc,rc.status}
  /sbin/mk_initrd
  /sbin/get_kernel_version
  /sbin/insserv
  /usr/bin/old
  /root/.gnupg/suse_build_key
  /root/.gnupg/suse_build_key
  /var/adm/fillup-templates
e postin
r /var/adm/fillup-templates

tar:
  /bin/tar

sed:
  /bin/sed

acl:
  /lib*

attr:
  /lib*

bash:
  /bin/bash
s bash /bin/sh

readline:
  /lib*/libreadline.so.4*
  /lib*/libhistory.so.4*

ash:
  /bin/ash.static

fileutils:
  /bin/{chgrp,chmod,chown,cp,dd,df,ln,ls,mkdir,mknod,mv,rm,rmdir,sync}
  /usr/bin/du
  /bin/touch

gzip:
  bin/g{un,}zip

joe:
  /usr/bin/joe
  /etc/joerc

hwinfo:
  /usr/lib*
  /usr/sbin

mktemp:
  /bin/mktemp

iputils:
  /bin/ping

rpm:
  /bin/rpm
  /usr/lib/rpm/{rpm{popt,rc},macros}

sh-utils:
  /bin/{date,echo,false,pwd,sleep,stty,true,uname,basename}
  /usr/bin/{expr,tee,dirname,chroot,test,tty}

util-linux:
  /bin/{kill,guessfstype}
  /bin/{u,}mount
  /bin/dmesg
  /sbin/losetup
  /sbin/blockdev

<kernel_rpm>:
if arch eq 'alpha'
# ???
#    m /boot/System.map-*.default /System.map
    m /boot/System.map-* /System.map
else
    m /boot/System.map-* /System.map
endif

if !(arch eq 'ppc' || arch eq 'ppc64' || arch eq 'ia64' || arch eq 'sparc' || arch eq 'sparc64' || arch eq 's390' || arch eq 's390x')

  include ../initrd/gen/module.files.cd1

else

  # make at least the directory to get depmod working
  d /lib/modules/<kernel_ver>/misc

endif

#if !(arch eq 'ppc' || arch eq 'ppc64' || arch eq 'sparc' || arch eq 'sparc64' || arch eq 'ia64' || arch eq 's390' || arch eq 's390x')
if arch eq 'ia32'
  pcmcia:
    /sbin/cardmgr
    /sbin/cardctl
    /sbin/dump_cis
endif

ncurses:
  /lib*/libncurses.so.5*
  /usr/bin/reset
  /usr/lib*/libpanel.so.5*
  /usr/share/terminfo
s ../share/terminfo /usr/lib/terminfo

if arch eq 'alpha' || suse_xrelease eq 'beta'
  libgcc:
    /lib*
endif

popt:
  /usr/lib*/libpopt.so*

glibc:
  /sbin/ldconfig
  /lib*/ld*
  /lib*/lib{c,m}.so.6*
  /lib*/{libcrypt.so.1*,libdb.so.2*,libdb.so.3,libdl.so.2*,libnsl.so.1*}
  /lib*/{libnss_compat.so.2,libnss_dns.so.2,libnss_files.so.2,libnss_hesiod.so.2}
  /lib*/{libnss_nis.so.2,libnss_nisplus.so.2,libresolv.so.2*,librt.so.1,libutil.so.1*}
  /usr/sbin/rpcinfo
  /usr/bin
  /etc/rpc
r /usr/bin/db_*
r /usr/bin/{catchsegv,gencat,getconf,getent,glibcbug,iconv,lddlibc4,mtrace,rpcgen,sprof}
r /usr/sbin/{nscd,nscd_nischeck,utmpd}
  /lib*/libpthread.so.0

glibc-locale:
  /usr/lib*/locale
  /usr/lib*/gconv/ISO8859*
  /usr/lib*/gconv/KOI*
  /usr/lib*/gconv/UNICODE*
  /usr/lib*/gconv/gconv-modules*

if !(arch eq 's390' || arch eq 's390x')
kbd:
  /usr/share/kbd
  /bin/loadkeys
  /usr/bin/{loadunimap,kbd_mode}
  /bin/{chvt,loadkeys}
  /usr/bin/{chvt,loadkeys}

# temporary fix for yast's setfont problems
m /usr/bin/setfont /usr/bin/setfont.bin
x /usr/bin/setfont /usr/bin
endif

if !(arch eq 's390' || arch eq 's390x')
  hdparm:
    /sbin/hdparm
endif

e2fsprogs:
  /sbin
  /lib*

file:
  /usr/bin/file

if arch eq 'ia32' || arch eq 'ppc' || arch eq 'ppc64'
  lilo:
    /sbin/activate
endif

if arch eq 'ia64'
  efibootmgr:
    /usr/sbin/efibootmgr
endif

if arch eq 's390' || arch eq 's390x'
  s390-tools: postin
    /sbin/zipl
    /lib*
    /boot
    /etc/zipl.conf.sample
    /sbin/dasdfmt
    /sbin/fdasd
    /sbin/zgetdump
    e postin
#  s390utils:
#    /sbin/zilo
#    /sbin/silo
endif

raidtools:
  /sbin/*

dosfstools:
  /sbin/{mkdosfs,mkfs.msdos,dosfsck,fsck.msdos}

net-tools:
  /bin/{domain,host}name
  /sbin/{ifconfig,route}
  if !(arch eq 's390' || arch eq 's390x')
    /sbin/plipconfig
  endif

portmap:
  /sbin/portmap

if arch eq 'i386'
umsprogs:
  /sbin/*
c 0755 0 0 /sbin/umssync
s /sbin/umssync /bin/umssync
endif

util-linux:
  /sbin/{mkfs,mkfs.minix,fsck.minix,mkswap,swapoff,swapon}
  if !(arch eq 's390' || arch eq 's390x')
    /sbin/{ctrlaltdel,hwclock}
  endif
  if arch eq 'ppc'
    /etc/filesystems
    /sbin/{clock,nvsetenv}
  endif

d /var/adm /var/tmp /var/lib/{amanda,gdm,news,pgsql,rpm,uucp/taylor_config}
d /var/lock/subsys
d /var/log/news /var/named /var/run /var/spool/{atjobs,fax,fnet,lpd,mail,postfix,rwho,uucp}

d /var/X11R6/{bin,xkb/compiled,app-defaults}

s ../lock /var/spool/locks
s /usr/X11R6/lib/X11 /var/X11R6/lib

t /var/log/{faillog,lastlog,mail,messages,sendmail.st,wtmp,xdm.errors}
t /var/log/news/news.{crit,err,notice}

c 1777 0 0 /var/tmp

d /usr/{bin,lib,lib64,libexec,sbin,share}

s ../var/spool /usr/spool
s ../var/tmp /usr/tmp

grep:
  /bin/{,e,f}grep

diffutils:
  /usr/bin/{cmp,diff}

findutils:
  /usr/bin/{find,xargs}

less:
  /etc/lesskey
  /usr/bin/less

modutils:
 /sbin/{depmod,genksyms,insmod,ksyms,lsmod,modinfo,modprobe,rmmod,insmod.static}

ps:
  /bin/ps
  m /bin/fuser /usr/bin
  /usr/bin/{free,killall,pstree,socklist,vmstat,top}

timezone:
  /usr/share/zoneinfo/{iso3166,zone}.tab

strace:
  /usr/bin/strace

if !(arch eq 'x86_64' || arch eq 'ia64' || arch eq 'alpha' || arch eq 's390' || arch eq 's390x')
  ltrace:
    /usr/bin/ltrace
    /etc/ltrace.conf
endif

cpio:
  /usr/bin/mt
  /bin/cpio

textutils:
  /bin/cat
  /usr/bin/{cut,head,md5sum,tail,tr,uniq,wc,od}
  /bin/sort

freetype2:
  /usr/lib*

c 0755 0 0 /usr/bin
c 0755 0 0 /usr/lib*
c 0755 0 0 /usr/sbin
c 0755 0 0 /usr/share

x /etc/ld.so.conf /etc

if with_yast2 ne 'no'
  d /usr/X11R6/{bin,include/X11,share}

  s X11R6 /usr/X11
  # Don't do this!
  # s /var/X11R6/bin/X /usr/X11R6/bin/X

  if arch eq 's390' || arch eq 's390x'
    xextra:
      .
  endif

  # old XF86 3.3
  if arch eq 'alpha'
    xsvga:
      .
  endif

  c 0755 0 0 /dev

  if arch ne 's390' && arch ne 's390x'
  # new XF86 4.0
  xloader:
    /usr/X11R6/bin/XFree86

  xmodules:
    /usr/X11R6/lib*/modules/codeconv
    /usr/X11R6/lib*/modules/drivers
  # video4linux stuff
  r /usr/X11R6/lib*/modules/drivers/linux
    /usr/X11R6/lib*/modules/extensions/lib{dbe,extmod}.a
  if arch ne 'ia64' && arch ne 'x86_64'
    /usr/X11R6/lib*/modules/extensions/libdri.a
  endif
    /usr/X11R6/lib*/modules/fonts/libbitmap.a
    /usr/X11R6/lib*/modules/input
    /usr/X11R6/lib*/modules/linux
  if arch ne 'ia64' && arch ne 'sparc' && arch ne 'sparc64' && arch ne 'ppc' && arch ne 'ppc64'
      /usr/X11R6/lib*/modules/*.uc
  endif
    /usr/X11R6/lib*/modules/lib*.a
  endif

  xshared:
    /usr/X11R6/lib*/lib{X11,Xext}.so*
    /usr/X11R6/lib*/lib{SM,ICE}.so*
    /usr/X11R6/lib*/lib{Xmu,Xmuu,Xi,Xt,Xft,Xrender,Xpm}.so*
    /usr/X11R6/lib/X11/locale
    /usr/X11R6/bin/xauth

 XFree86-compat-libs:
   /usr/X11R6/lib*/lib{Xxf86misc,Xxf86vm}.so*

  mesasoft:
    /
    E /usr/X11R6/bin/switch2mesasoft || true
    r /usr/X11R6/bin/switch2mesasoft

  mesaglu:
    /usr/lib*

  xf86:
    /usr/X11R6/lib/X11/{XErrorDB,XKeysymDB,rgb.txt}
    /etc/X11/xkb
    s /etc/X11/xkb /usr/X11R6/lib/X11
    /usr/X11R6/bin/xkbcomp
    /usr/X11R6/lib/X11/locale
    /etc/X11/xserver
  r /etc/X11/xserver/C
  s /etc/X11/xserver /usr/X11R6/lib/X11
  # unicode stuff
  d /usr/X11R6/lib/X11/fonts/{misc,uni}
    /usr/X11R6/lib/X11/fonts/misc/cursor.pcf.gz
    # 'fixed' font
    /usr/X11R6/lib/X11/fonts/misc/6x13-ISO8859-1.pcf.gz

#  x /usr/X11R6/lib/X11/fonts/misc/fonts.alias /usr/X11R6/lib/X11/fonts/misc
  x /usr/X11R6/lib/X11/XF86Config_{3,4} /usr/X11R6/lib/X11

  /usr/X11R6/lib/X11/fonts/misc/{encodings.dir,fonts.alias,fonts.dir,olcursor.pcf.gz}


  if arch eq 'x86_64' || arch eq 's390x' || arch eq 'ppc64'
    R s#usr/X11R6/lib/modules#usr/X11R6/lib64/modules# /usr/X11R6/lib/X11/XF86Config_4
  endif

  xf86tools:
    /usr/X11R6/lib/X11/XftConfig

  libusb:
    /usr/lib*/libusb*.so.*
  if arch eq 's390x'
#    these libs are needed for 32-Bit vnc

    glibc-32bit:
      /lib/ld.so.1
      /lib/ld-2.2.5.so
      /lib/libc.so.6
      /lib/libdl.so.2
      /lib/libm.so.6
  endif
  vnc:
    /usr/X11R6/bin/Xvnc
    /usr/X11R6/bin/vncpasswd.arg
    /usr/share/vnc/classes

  libxml2:
    /usr/lib*/libxml2.so*

  curl:
    /usr/lib*/libcurl.so*

endif

if with_yast2 ne 'no'
  yast2:
    /usr
    /var
    s /usr/lib/YaST2/bin/fdisk /sbin/fdisk
    s /usr/lib/YaST2/bin/YaST2.start /sbin/yast
  yast2-bootloader:
    /
  yast2-core:
    /
  yast2-country:
    /
  yast2-installation:
    /
  yast2-mouse:
    /
  yast2-ncurses:
    /
  yast2-network-instsys:
    /
  yast2-packagemanager:
    /
  yast2-packager:
    /
  yast2-qt:
    /
  yast2-storage:
    /
  yast2-transfer:
    /
  yast2-trans-bs:
    /
  yast2-trans-cs:
    /
  yast2-trans-da:
    /
  yast2-trans-de:
    /
  yast2-trans-el_GR:
    /
  yast2-trans-en_GB:
    /
  yast2-trans-en_US:
    /
  yast2-trans-es:
    /
  yast2-trans-fr:
    /
  yast2-trans-hu:
    /
  yast2-trans-it:
    /
  yast2-trans-ja:
    /
  yast2-trans-ko:
    /
  yast2-trans-lt:
    /
  yast2-trans-nl:
    /
  yast2-trans-pt_BR:
    /
  yast2-trans-sk:
    /
  yast2-trans-sl_SI:
    /
  yast2-trans-sv:
    /
  yast2-trans-tr:
    /
  yast2-trans-zh_CN:
    /
  yast2-trans-zh_TW:
    /
  yast2-x11:
    /
  yast2-xml:
    /
  yast2-update:
    /
  autoyast2-installation:
    /
  liby2util:
   /

  yast2-theme-<yast_theme>:
    /
    s <yast_theme> usr/share/YaST2/theme/current

endif


libpng:
  /usr/lib*/libpng*.so*

zlib:
  /lib*/libz.so.1*

c 0755 0 0 /usr
if with_yast2 ne 'no'
  c 0755 0 0 /usr/X11R6
  c 0755 0 0 /usr/X11R6/bin
  c 0755 0 0 /etc/X11
endif

libgcc:
  /lib*/libgcc_s.so.*

libstdc++:
  /usr/lib*/libstdc++*.so*

libjpeg:
  /usr/lib*/libjpeg.so*

eject:
  /bin/eject

libmng:
  /usr/lib*/libmng.so*

liblcms:
  /usr/lib*/liblcms.so*

if with_yast2 ne 'no'
  qt3:
    /etc/X11/qtrc
    /usr/lib*/qt-*/etc/settings/qtrc
    /usr/lib*/qt3
#  qt3-non-mt:
    /usr/lib*/libqt*.so.3
    /usr/lib*/qt-*/lib*/libqt*.so*
    E echo -e "[General]\nenableXft=false\nuseXft=false\nstyle=Platinum" >/etc/X11/qtrc
endif

# remove these:
r root mnt tmp usr/libexec

if arch eq 'ia32'
  syslinux:
    /usr/sbin/syslinux
endif

netcfg:
  /etc/{services,protocols}

if with_yast2 ne 'no' && arch ne 's390' && arch ne 's390x'
  saxtools:
    /usr/X11R6/bin
  saxident:
    /
endif

if arch eq 'ppc' || arch eq 'sparc' || arch eq 'sparc64'
  # the agp module from xsvga may cause 700 permissions; fix it here
  # c 0755 0 0 /lib/modules

  # what for???
  # d /lib/modules/<kernel_ver>/misc
endif

lvm:
  /lib*/liblvm-*.so*
  /sbin/lv*  
  /sbin/pv* 
  /sbin/vg*

reiserfs:
  /sbin

gawk:
  /bin

if arch eq 'ppc' || arch eq 'ppc64'
  pdisk:
    /sbin/pdisk

  lilo:
    /bin/show_of_path.sh

  fbset:
    /etc/fb.modes
    /usr/sbin/fbset

  hfsutils:
    /usr/bin/hattrib
    /usr/bin/hcd
    /usr/bin/hcopy
    /usr/bin/hdel
    /usr/bin/hdir
    /usr/bin/hformat
    /usr/bin/hls
    /usr/bin/hmkdir
    /usr/bin/hmount
    /usr/bin/hpwd
    /usr/bin/hrename
    /usr/bin/hrmdir
    /usr/bin/humount
    /usr/bin/hvol

  initviocons:
    /bin/initviocons
    /usr/bin/termprobes
endif

if arch eq 'ia32'
  xfiregl1:
    /usr/X11R6/lib/modules/drivers/firegl1_drv.o
  xfiregl23:
    /usr/X11R6/lib/modules/drivers/firegl23_drv.o
endif

if arch eq 'ia32'
  # needed for blinux start script
  sysvinit:
    /sbin/{check,kill,start}proc

  sbl:
    /usr/lib/suse-blinux
    /etc/init.d/suse-blinux
    /etc/suse-blinux.conf
    r /usr/lib/suse-blinux/profile/default
    s y2base /usr/lib/suse-blinux/profile/default

endif

sysvinit:
  /sbin/checkproc

syslogd:
  /sbin/klogd
  m /sbin/syslogd /sbin/syslogd.bin
  x etc/syslogd /sbin/syslogd

if pre_release || suse_release >= 8.1
  # will not appear in final release
  openssh: prein
    /etc/init.d/sshd
    /etc/pam.d/sshd
    /etc/ssh
    /usr/sbin/sshd
    /usr/bin/ssh
    /usr/bin/ssh-keygen
    /usr/bin/scp
    e prein

  heimdal-lib:
    /etc
    /usr/lib*/libasn1.so.*
    /usr/lib*/libcom_err.so.*
    /usr/lib*/libgssapi.so.*
    /usr/lib*/libkrb5.so.*
    /usr/lib*/libroken.so.*

  db:
    /usr/lib*/libdb-4*.so  

  pam:
    /etc/pam.d/other
    /lib*/security
    /lib*/libpam.so.*
    /lib*/libpam_misc.so.*

  pam-modules:
    /{etc,lib*,sbin}

    # don't use cracklib
    c 755 0 0 /etc/security
    R s/^(password:.*?)\s+use_cracklib\b/$1/ /etc/security/pam_pwcheck.conf

  libxcrypt:
    /lib*/libxcrypt.so.*

  cracklib:
    /usr/lib*/libcrack.so*

  gdbm:
    /usr/lib*/libgdbm.so*

  vim:
    /bin/vim
    /bin/vi

   r /lib*/security/pam_userdb.so

   x etc/inst_setup_ssh /sbin/
   c 755 0 0 /sbin/inst_setup_ssh
   x etc/ssh /etc
   c 644 0 0 /etc/ssh/*
   d /root
if 0
   x root/.ssh /root
endif
   x root/.yast2 /root
   x root/.bash_history /root
   x root/.bash_login /root
   x root/.vimrc /root
endif

parted:
  /usr/sbin
  /usr/lib*

jfsutils:
  /sbin/{fsck.jfs,mkfs.jfs}

xfsprogs:
  /sbin/fsck.xfs
  /sbin/mkfs.xfs
  /usr/sbin/xfs_{growfs,admin,db}

wget:
  /etc
  /usr/bin

openssl:
  /usr/lib*
  /usr/share/ssl

timezone:
  /usr
  r /usr/share/zoneinfo/posix
  r /usr/share/zoneinfo/right

hex:
  /usr/bin/hex

shadow:
  /etc/pam.d/shadow
  /usr/sbin/chpasswd

if with_yast2 ne 'no'
  # make fonts.dir
  e mkfontdir usr/X11R6/lib/X11/fonts/misc
endif

c 644 0 0 /etc/shadow

x /usr/lib/YaST/.Reh /usr/lib/YaST2
x etc/inst_setup /sbin/inst_setup
x etc/create_interface /sbin/create_interface
c 755 0 0 /sbin/inst_setup
c 755 0 0 /sbin/create_interface

## add link to initrd modules
## check mk_root before you're going to change this!!!
#d /lib/modules/<kernel_ver>/initrd
#e /bin/ln -s /modules/*.o /lib/modules/<kernel_ver>/initrd

# run depmod
E /sbin/depmod -a -F /System.map <kernel_ver>

# final clean up
r /etc/X11/xserver/C
r /usr/share/doc/packages/*

# r /modules
r /System.map
r /sbin/insserv

# some scripts write to /dev/null...
r /dev

x usr/bin/conservative_lndir usr/bin
if arch eq 'ppc'
x usr/bin/ppc_post_install.sh usr/bin
endif
