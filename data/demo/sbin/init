#! /bin/sh

debug=

[ -e /etc/.SuSEok ] && exit 0

PATH=/bin:/sbin:/usr/bin:/usr/sbin:/S.u.S.E./bin:/S.u.S.E./usr/bin
cd /


# for all missing files, create a link to /S.u.S.E.
# (_NOT_ recursive)
function mk_links {
  for i in "$@" ; do
    [ -d "$i" ] || continue
    [ -d "/S.u.S.E./$i" ] || continue
    j=`( cd /S.u.S.E./$i && echo * )`
    p=`( cd /S.u.S.E./$i && pwd )`
    [ "$j" ] || continue
    for k in $j ; do
      if [ $k != TRANS.TBL -a $k != rr_moved -a $k != links.tgz ] ; then
        if [ \( -e "$p/$k" -o -L "$p/$k" \) -a ! -e "$i/$k" ] ; then
          if [ -L "$p/$k" ] ; then
            ( cd $i && cp -a "$p/$k" . )
          else
            ( cd $i && ln -snf "$p/$k" . )
          fi
        fi
      fi
    done
  done
}


# copy all args from /S.u.S.E.
# (_recursive_)
function add_to_root {
  while [ "$1" ] ; do
    [ -e "/S.u.S.E./$1" ] || {
      shift ; continue
    }
    f=`( cd /S.u.S.E. && echo ./$1 )`
    [ "$f" ] || {
      shift
      continue
    }
    for i in $f ; do
      if [ -d /S.u.S.E./$i ] ; then
        if [ ! -d "/$i" -o -L "/$i" ] ; then
          rm -f /$i && mkdir /$i
        fi
        if [ -d "/$i" ] ; then
          if [ "`echo /S.u.S.E./$i/*`" != "/S.u.S.E./$i/*" ] ; then
            rm -rf /$i ; mkdir /$i
            cp -af /S.u.S.E./$i/* /$i
          fi
        fi
        chown --reference /S.u.S.E./$i /$i 2>/dev/null
        chmod --reference /S.u.S.E./$i /$i
      else
        rm -f /$i && cp -af /S.u.S.E./$i /$i
      fi
    done
    shift
  done
}


# make a local copy of a directory, everything in dir gets linked
# stops at the first non-existent argument
# usage: link_dir [--recursive [max_depth]] dir1 ...
function link_dir {
  local i r

  if [ "$1" = --recursive ] ; then
    shift
    if [ "$1" -ge 0 -o "$1" -lt 0 ] 2>/dev/null ; then
      r="$1"
      shift
    else
      r=1111
    fi
  else
    r=0
  fi

  while [ "$1" ] ; do
    if [ -d "/S.u.S.E./$1"  -a ! -L "/S.u.S.E./$1" ] ; then
      if [ -L "$1" -o ! -d "$1" ] ; then
        rm -f "$1"
        mkdir "$1"
        chown --reference /S.u.S.E./$1 $1 2>/dev/null
        chmod --reference /S.u.S.E./$1 $1
      fi
      mk_links "$1"
      if [ "$r" -ge 1 ] ; then
        for i in $1/* ; do
          [ -d $i ] && link_dir --recursive $((r-1)) $i
        done
      fi
    else
      return 1
    fi
    shift
  done

  return 0
}


function start_braille {
  if [ "$Braille" -a -x /etc/init.d/suse-blinux ] ; then
    proc_mnt=
    if [ -d /proc/self ] ; then
      proc_mnt=1
    else
      mount -n /proc 2>/dev/null
    fi
    sed -e "s#brlname=.*#brlname=$Braille#" -e "s#brlport=.*#brlport=$Brailledevice#" /etc/suse-blinux.conf >/tmp/suse-blinux.conf
    mv -f /tmp/suse-blinux.conf /etc
    /etc/init.d/suse-blinux start
    braille_running=1
    [ "$proc_mnt" ] || umount /proc 2>/dev/null
  fi
}


function kill_and_wait {
  killall -0 $1 2>/dev/null && {
    killall $1 2>/dev/null
    while killall -0 $1 2>/dev/null ; do
      sleep 1
    done
  }
}


function add_livecd {

  mk_links .
  link_dir bin etc lib sbin var boot srv

  link_dir sbin/conf.d

  link_dir etc/init.d
  link_dir etc/httpd
  link_dir etc/X11
  link_dir etc/init.d/rc[S0-6].d
  link_dir etc/init.d/boot.d
  link_dir etc/ssh
  link_dir etc/susehelp.d

  link_dir opt opt/kde3 opt/kde3/share
  link_dir etc/opt etc/opt/kde3 etc/opt/kde3/share etc/opt/kde3/share/config

  link_dir usr usr/lib usr/X11R6 usr/X11R6/bin
  link_dir usr/X11R6/lib usr/X11R6/lib/modules usr/X11R6/lib/modules/extensions

  add_to_root bin/basename

  add_to_root sbin/init
  add_to_root sbin/ifup-dhcp

  add_to_root etc/pcmcia etc/pam.d etc/rc.config etc/sysconfig
  add_to_root etc/security etc/default
  add_to_root etc/SuSEconfig
  add_to_root etc/init.d/{boot,halt}.local
  add_to_root etc/{passwd,group,shadow,gshadow,nsswitch.conf,wvdial.conf,rc.dialout}
  add_to_root etc/httpd/httpd.conf
  add_to_root etc/ppp etc/isdn etc/vbox
  add_to_root etc/suse-blinux.conf
  add_to_root etc/{a2ps-site.cfg,pppoed.conf}
  add_to_root etc/usbmgr
  add_to_root etc/{host.conf,nntpserver,HOSTNAME}
  add_to_root etc/{lpdfilter,printcap,lpd.conf,lpd.perms}

  add_to_root opt/kde3/share/config
  add_to_root etc/opt/kde3/share/config/kdm

  cp /usr/bin/lsof /bin

  for i in `( cd /S.u.S.E./var && echo * )` ; do
    if [ -d /S.u.S.E./var/$i ] ; then
      if [ "$i" != X11R6 -a "$i" != adm -a "$i" != cache -a "$i" != lib ] ; then
        rm -rf /var/$i
        add_to_root var/$i
      fi
    fi
  done

  link_dir --recursive 1 var/cache
  rm -f /var/cache/*/*

  link_dir --recursive var/{X11R6,adm,lib}

  add_to_root var/X11R6/sax/config/saxrc

  rm -f var/X11R6/lib ; mkdir /var/X11R6/lib
  add_to_root var/X11R6/lib/{sax,xfine}
  add_to_root var/cache/sax

  add_to_root var/lib/{dhcp,majordomo,news,nfs,pcmcia,support,wvdial}

  # kdm needs it
  ln -snf ../../../etc/X11/xdm /var/X11R6/lib/xdm

  touch /var/run/utmp
}


shopt -s expand_aliases
alias deb_stop='[ "$debug" ] && echo -e "\n$LINENO" && ( unset LANG ; PS1="\w>" /bin/bash ) ; [ "$debug" -a -f /rc ] && . /rc ; [ "$debug" ] && rm -f /rc'

#preserve=
#for i in /sbin/live-setup /bin/bash /lib/lib* /etc/{.SuSEfiles,mtab} /tmp ; do
#  [ -e "$i" ] && preserve="$preserve $i"
#done

if [ "$1" = "--link-livecd" ] ; then
  mv $0 /sbin/live-setup
  mv /etc/fstab /etc/fstab.tmp
  add_livecd
  mv /etc/fstab.tmp /etc/fstab
  rm -f $0
  mv /sbin/live-setup $0
  rm -f /etc/mtab
  add_to_root etc/liveeval-id
  exit
fi

exec 0<> /dev/tty1 1>&0 2>&0

export PATH=/bin:/sbin:/usr/bin:/usr/sbin:/S.u.S.E./bin:/S.u.S.E./usr/bin

[ ! "$Language" -a -f /lang ] && Language=`cat /lang`
rm -f /lang
[ "$Language" ] && LANG=$Language
[ -d /.livecd/locale ] && export TEXTDOMAINDIR=/.livecd/locale
TEXTDOMAIN=livecd
export TEXTDOMAIN Language LANG LANGUAGE

[ -f /etc/liveeval.conf ] && . /etc/liveeval.conf

[ $0 = /sbin/init ] && echo -en "\033c"

braille_running=

nodisk=
debug=
new=
clean=
startshell=
stop=
yaststop=
x=",$live,"
[ "$x" != "${x/,nodisk,}" ] && nodisk=1
[ "$x" != "${x/,debug,}" ] && debug=1 startshell=1
[ "$x" != "${x/,shell,}" ] && startshell=1
[ "$x" != "${x/,new,}" ] && new=1
[ "$x" != "${x/,clean,}" ] && clean=1 new=1
[ "$x" != "${x/,stop,}" ] && stop=1
[ "$x" != "${x/,yast,}" ] && yaststop=1 startshell=1
[ "$x" != "${x/,xxx,}" ] && xxx=1 startshell=1

swapfile=
swappart=
partition=
[ "$l_nodisk" ] && nodisk=1
[ "$l_new" ] && new=1
[ "$l_swapfile" ] && swapfile="suselive.swp"
[ "$l_swappart" ] && swappart=/dev/$l_swappart
[ "$l_partition" ] && partition=/dev/$l_partition
livehome=suselive.usr
swapsize=100
homesize=100

if [ "$debug" ] ; then
 echo -e "\ndebug=$debug, yast=$yaststop, shell=$startshell, new=$new, clean=$clean, stop=$stop"
 echo "nodisk=$nodisk, liveconfig=$liveconfig, swapfile=$swapfile, swappart=$swappart, partition=$partition"
fi

deb_shell=
[ $0 != /sbin/init -a "$startshell" ] && deb_shell=`/sbin/startshell /dev/tty6`

deb_stop

if [ $0 = /sbin/init ] ; then
  # first run

  mount -n -oremount,rw /
  mount -n -t proc proc /proc
  killall portmap 2>/dev/null
  [ -f /lib/nls_iso8859-1.o ] && insmod /lib/nls_iso8859-1.o

  mount /S.u.S.E.

  rmdir /initrd 2>/dev/null
  [ -d /initrd ] && umount /initrd 2>/dev/null && rmdir /initrd 2>/dev/null

  # move us out of the way...
  mv $0 /sbin/live-setup

  if [ -f /S.u.S.E./boot/susee ] ; then
    suseloop=boot/susee
    sed -e 's/S.u.S.E./.SuSE/' /etc/fstab >/tmp/fstab
    mv /tmp/fstab /etc/fstab
    mkdir /.SuSE
    umount /S.u.S.E.
    mount /.SuSE

    # ****  WARNING: there is currently no 'ln' available at this point!  ****

    [ -e /dev/loopc0 ] || ln -snf /dev/loop0 /dev/loopc0
    if [ -f /lib/loopc.o ] ; then
      insmod /lib/loopc.o
      echo "/.SuSE/$suseloop /S.u.S.E. iso9660 defaults,ro,loop=/dev/loopc0 0 0" >>/etc/fstab
    else
      echo "/.SuSE/$suseloop /S.u.S.E. ext2 defaults,ro,loop=/dev/loopc0 0 0" >>/etc/fstab
    fi
    mount /S.u.S.E.
    fstype=`grep '/\.SuSE' /etc/mtab | head -1 | cut -d \  -f 3`
    if [ "$fstype" ] ; then
      sed -e "s/\.SuSE auto/.SuSE $fstype/" \
          -e "s/\.SuSE iso9660/.SuSE $fstype/" /etc/fstab >/tmp/fstab
      mv /tmp/fstab /etc/fstab
    fi
    sed -e '/# mount Live CD/ a \' -e '	mount -v /.SuSE' /etc/init.d/boot.localfs >/tmp/boot
    mv /tmp/boot /etc/init.d/boot.localfs
    chmod 744 /etc/init.d/boot.localfs

    sed -e '/^  # mount Live CD/ a \' -e '  [ ! -f /.SuSE/'"$suseloop"' ] && mount -n /.SuSE' \
        -e '/^# umount Live CD/ i \' -e 'losetup -d /dev/loopc0\' -e 'umount -n /.SuSE' \
        /sbin/live-shutdown >/tmp/live-shutdown
    mv /tmp/live-shutdown /sbin/live-shutdown
    chmod +x /sbin/live-shutdown
  fi

  umount /proc

  gettext -n "Integrating SuSE Linux 8.2 LiveEval CD"

  deb_stop

  id1=
  id2=
  [ -f /S.u.S.E./etc/liveeval-id ] && id1=`cat /S.u.S.E./etc/liveeval-id`
  [ -f /etc/liveeval-id ] && id2=`cat /etc/liveeval-id`

  if [ "$id2" = "" -o "$id2" != "$id1" ] ; then
    add_livecd
  else
    add_to_root sbin/init
  fi
  rm -f /etc/liveeval-id

  echo

  deb_stop

  mods=/lib/modules/`uname -r`
  [ -d "$mods" ] && touch -r "$mods/modules.dep" /etc/modules.conf

  [ -f /etc/httpd/httpd.conf ] && perl -pi -e 's/-(?=FollowSymLinks)//g' /etc/httpd/httpd.conf

  perl -pi -e 's/^(SUSEWM_UPDATE=).*/$1\"no\"/' /etc/sysconfig/windowmanager
  rm -f /sbin/conf.d/SuSEconfig.{perl,groff,alsa}

  if [ -f /etc/install.inf ] ; then
    perl -pi -e 's/^(Sourcemounted:).*/$1 1/' /etc/install.inf
    eval $(grep ': ' /etc/install.inf | sed -e 's/"/"\\""/g' -e 's/:  */="/' -e 's/$/"/' -e 's/^/export /')
    Language=$Locale
  fi

  if [ "$Language" ] ; then
    perl -pi -e 'if(/unset LANG/) { $_ = "    export LANG=\"'"$Language"'\"\n" if $a++ }' /etc/SuSEconfig/profile
    perl -pi -e 'if(/unsetenv LANG/) { $_ = "    setenv LANG \"'"$Language"'\"\n" if $a++ }' /etc/SuSEconfig/csh.cshrc
  fi

  if [ "$Keytable" ] ; then
    perl -pi -e 's/^(KEYTABLE=).*/$1\"'"$Keytable"'\"/' /etc/sysconfig/keyboard
  fi

  deb_stop

  mkdir /host /newroot

  mount -n -t shm -onr_inodes=20480 shm /newroot

  error=
  if [ "$new" ] ; then
    tar -lcf - . | tar -C /newroot -xpf -
  else
    gettext -s "Updating filesystem"
    mount -n $partition /host || error=21
    tar -C /newroot -zxpf /host/$liveconfig
    umount -n /host
    for i in /etc/liveeval.conf /sbin/live-setup ; do
      rm -f /newroot$i
      cp $i /newroot$i
    done
  fi

  cd /newroot
  mkdir -p oldroot
  pivot_root . oldroot

  umount -n /oldroot/S.u.S.E.
  if [ -d /oldroot/.SuSE ] ; then
    losetup -d /dev/loopc0 2>/dev/null
    umount -n /oldroot/.SuSE
  fi

  deb_stop

  exec /sbin/live-setup

  deb_stop

  exit

else

  # second run

  mount /proc
  [ -d /.SuSE ] && mount /.SuSE
  mount /S.u.S.E.

  [ -d /oldroot ] && umount /oldroot 2>/dev/null && rmdir /oldroot 2>/dev/null
  rmdir /newroot 2>/dev/null
  freeramdisk /dev/ram2

  mods=/lib/modules/`uname -r`
  [ -d "$mods" ] && touch -r "$mods/modules.dep" /etc/modules.conf

  if [ ! "$nodisk" ] ; then
    rm -rf /home/tmp ; mkdir -p /home/tmp ; chmod 1777 /home/tmp
    rm -rf /tmp ; ln -s /home/tmp /
  fi
fi

deb_stop

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

if [ ! "$new" ] ; then

  mount $partition
  mount /home
  rm -rf /home/tmp ; mkdir /home/tmp ; chmod 1777 /home/tmp
  umount /home

  umount $partition
  umount /S.u.S.E.
  if [ -d /.SuSE ] ; then
    losetup -d /dev/loopc0 2>/dev/null
    umount /.SuSE
  fi

  umount /proc

  deb_stop

  rm -f /sbin/live-setup ; umount -a 2>/dev/null ; exec /sbin/init
fi

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

if [ ! "$nodisk" ] ; then

  mkdir -p /host
  mount $partition /host

  if [ "$clean" ] ; then
    rm -f /host/$swapfile /host/$livehome 2>/dev/null
  fi

  if [ "$swapfile" ] ; then
    if [ ! -f "/host/$swapfile" ] ; then
      printf "`gettext 'Creating swap file "suselive.swp" (%s MB)'`" $swapsize
      echo
      dd if=/dev/zero of=/host/$swapfile bs=1M count=$swapsize 2>/dev/null
    fi
    mkswap /host/$swapfile >/dev/null
  fi

  if [ ! -f "/host/$livehome" ] ; then
    printf "`gettext 'Creating user data file "suselive.usr" (%s MB)'`" $homesize
    echo
    dd if=/dev/zero of=/host/$livehome bs=1M count=$homesize 2>/dev/null
    mke2fs -q -F -b 1024 -m 0 /host/$livehome 2>/dev/null
    tune2fs -i 0 /host/$livehome 2>/dev/null >/dev/null
  fi

  if [ "$swapfile" ] ; then
    gettext -s "Activating swap space"
    echo "/host/$swapfile swap swap defaults 0 0" >>/etc/fstab
  fi

  if [ "$swappart" ] ; then
    gettext -s "Activating swap space"
    echo "$swappart swap swap defaults 0 0" >>/etc/fstab
  fi

  if [ "$livehome" ] ; then
    gettext -s "Activating /home"
    echo "/host/$livehome /home ext2 defaults,loop=/dev/loop1 0 0" >>/etc/fstab
  fi

else

  if [ "$swappart" ] ; then
    gettext -s "Activating swap space"
    echo "$swappart swap swap defaults 0 0" >>/etc/fstab
  fi

fi

deb_stop

[ -d /proc/bus/usb ] && mount -t usbdevfs usb /proc/bus/usb
rmdir /mnt ; ln -s / /mnt
cp /etc/fstab /tmp/fstab.save
swapon -a

if [ ! "$nodisk" ] ; then
  mount /home
  rm -rf /home/tmp ; mkdir /home/tmp ; chmod 1777 /home/tmp

  if [ -d /usr/X11R6/lib/X11/fonts/truetype ] ; then
    # make truetype dir
    mkdir /home/truetype
    cp -a /usr/X11R6/lib/X11/fonts/truetype/* /home/truetype
    link_dir usr/X11R6/lib/X11 usr/X11R6/lib/X11/fonts
    ln -snf /home/truetype  /usr/X11R6/lib/X11/fonts/truetype
  fi
fi

sh -c '/sbin/syslogd 2>/dev/null'

# run it again...
[ -x /sbin/pcmcia.postin ] && /sbin/pcmcia.postin >/dev/null 2>&1
rm -f /sbin/pcmcia.postin

# yast likes to call it, so take it away
mv /sbin/depmod /sbin/depmod.tmp
ln -snf /bin/true /sbin/depmod

[ "$yaststop" ] && debug=1

deb_stop

LANGUAGE=$Language
[ "$LANGUAGE" ] || LANGUAGE=en_US

/usr/lib/YaST2/bin/YaST2.start

[ "$?" = 0 ] || yasterror=1

rm -f /sbin/depmod
mv /sbin/depmod.tmp /sbin/depmod

# unset LANG

if [ ! \( "$debug" -o "$xxx" -o "$stop" \) ] ; then
  echo -en \\033c
  echo -en \\033c >/dev/tty2
fi

if [ -f /etc/X11/XF86Config ] ; then
  perl -pi -e 's/((100|75)dpi)\"/$1:unscaled\"/' /etc/X11/XF86Config
fi

kill_and_wait cardmgr
kill_and_wait dhcpd
kill_and_wait lpd
kill_and_wait ipppd
kill_and_wait pppd
kill_and_wait usbmgr
kill_and_wait xidle

[ -d /proc/asound ] && /etc/init.d/alsasound stop

killall syslogd

umount /var/adm/mount 2>/dev/null

[ -d "$mods" ] && touch -r "$mods/modules.dep" /etc/modules.conf

hwscan --storage
hwscan --pci
perl -pi -e 's/^Configured=new/Configured=no/' /var/lib/hardware/unique-keys/*

#if [ -f /etc/install.inf ] ; then
#  eval $(grep ': ' /etc/install.inf | sed -e 's/"/"\\""/g' -e 's/:  */="/' -e 's/$/"/' -e 's/^/export /')
#fi

if [ -f /etc/yast.inf ] ; then
  eval $(grep 'Aborted.*: ' /etc/yast.inf | sed -e 's/"/"\\""/g' -e 's/:  */="/' -e 's/$/"/' -e 's/^/export /')
fi

rm -f /etc/install.inf /etc/yast.inf

[ "$yasterror" ] && Aborted=1

[ "$xxx" ] && debug=1

deb_stop

# rm -rf /var/lib/YaST2
rm -f /var/lib/YaST2/runme_at_boot
rm -f /mnt ; mkdir /mnt
cat /etc/fstab >>/tmp/fstab.save
fix_fstab "$partition" </tmp/fstab.save >/etc/fstab

# set default runlevel, yast2 doesn't do this properly
rl=3
[ -x /var/X11R6/bin/X ] && rl=5
perl -pi -e 's/^(id:)(\d+)(:initdefault:)/${1}'$rl'$3/' /etc/inittab

# create all mountpoints mentioned in fstab
mkdir -p `perl -nle '$_ = (split)[1]; print if m#^/.#' /etc/fstab`

if [ ! "$nodisk" ] ; then
  umount /home
  losetup -d /dev/loop1
fi
swapoff -a 2>/dev/null
umount /host 2>/dev/null
rmdir /host 2>/dev/null

deb_stop

cp /proc/mounts /etc/mtab
umount $partition 2>/dev/null

deb_stop

if [ \( ! "$nodisk" \) -a \( ! "$Aborted" \) ] ; then
  sed -e '/^# mount config partition/ a \' -e "mount $partition" /etc/init.d/boot >/etc/tmp_boot
  mv /etc/tmp_boot /etc/init.d/boot
  chmod 744 /etc/init.d/boot
fi

cp /proc/mounts /etc/mtab

if [ ! "$nodisk" ] ; then

  rm -rf /tmp ; ln -s /home/tmp /

  mount -n $partition /mnt || error=21

  if [ "$Aborted" ] ; then

    [ -f /mnt/$livehome ] && rm -f /mnt/$livehome
    [ -f /mnt/$swapfile ] && rm -f /mnt/$swapfile

  else

    # write initial config file
    echo
    printf "`gettext 'Writing LiveEval config'`"
    echo

    cd /
    tar -zclf /mnt/$liveconfig . 2>/dev/null || error=1

    if [ ! -f /mnt/suselive.txt ] ; then
      printf "`gettext '%s contains data for your SuSE Linux 8.2 LiveEval CD.'`" "$suseimg" >/mnt/suselive.txt
      echo -e "\n\r" >>/mnt/suselive.txt
      gettext -s "suselive.swp (if it exists) is the swap file." >>/mnt/suselive.txt
      echo -e "\r" >>/mnt/suselive.txt
      gettext -s "suselive.usr (if it exists) is an ext2 file system with the user's home dir." >>/mnt/suselive.txt
      echo -e "\r" >>/mnt/suselive.txt
    fi

    if [ "$error" ] ; then
      printf "`gettext 'An error occurred while writing %s.'`" "$liveconfig"
      echo
      gettext -s "Sorry, your LiveEval CD changes might be lost. :-("
    fi

  fi

  umount -n /mnt

  if [ "$Aborted" ] ; then

    gettext -e -s "SuSE Linux 8.2 LiveEval has not been configured.\nPress enter to reboot."

    read

    deb_stop

    reboot -f

  fi

  mount $partition

fi


deb_stop

umount /proc/bus/usb
umount /proc

if [ "$Braille" -a -x /etc/rc.d/suse-blinux ] ; then
  if [ "$braille_running" ] ; then
    /etc/rc.d/suse-blinux stop
    braille_running=
    umount /proc 2>/dev/null
  fi
else
  chkconfig suse-blinux off
fi

deb_stop

mount -n /proc 2>/dev/null

# wait for some stupid SuSEconfig script to finish
killall -0 susedig.sh 2>/dev/null && {
  gettext -s "Waiting for SuSEconfig to finish..."
}
while killall -0 susedig.sh 2>/dev/null ; do
  sleep 1
done

deb_stop

# remove pcmcia modules
rmmod `perl -ne 'print "$2 $1" if /^(pcmcia_core)\s.*\[(.*)\]/' /proc/modules` >/dev/null 2>&1

# unload all usb things
for i in \
  sbp2 ohci1394 ieee1394 \
  usb-storage keybdev mousedev hid input \
  usb-uhci uhci usb-ohci ehci-hcd usbcore \
  ; do
  rmmod $i 2>/dev/null
done

unset LANG LANGUAGE TEXTDOMAINDIR TEXTDOMAIN

umount -n /proc

# don't ask...
sleep 2

deb_stop

umount /S.u.S.E. 2>/dev/null || {
  if [ "$debug" ] ; then
    mount -n /proc
    pstree -Gp
    lsof
    umount -n /proc
  fi
  sleep 3
  umount /S.u.S.E.
}

if [ -d /.SuSE ] ; then
  losetup -d /dev/loopc0
  umount /.SuSE
fi

deb_stop

if [ -z "$COLUMNS" ] ; then
  eval `stty size 2>/dev/null | (read L C; echo COLUMNS=${C:-80})`
fi
[ "$COLUMNS" = 0 -o "$COLUMNS" = "" ] && COLUMNS=80
echo -e "\015\033[${COLUMNS}C\033[10D\033[1;32mdone\033[m"

[ "$debug" ] ||  rm -f /sbin/fix_fstab


if [ "$nodisk" ] ; then
  rm -f /sbin/live-shutdown
fi

[ "$deb_shell" ] && kill -9 "$deb_shell"

[ "$partition" ] && umount $partition 2>/dev/null

[ "$stop" ] && debug=1
deb_stop

rm -f /sbin/live-setup ; umount -a 2>/dev/null ; [ $$ = 1 ] && exec /sbin/init
