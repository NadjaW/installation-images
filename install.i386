#! /bin/sh

# gets ARCH, THEMES, DESTDIR, INSTSYS_PARTS, BOOT_PARTS, WITH_FLOPPY via env

set -e
shopt -s extglob

# create directory layout
mkdir -p $DESTDIR/CD1/boot/$ARCH/loader
for theme in $THEMES ; do
  mkdir -p $DESTDIR/branding/$theme/CD1/boot/$ARCH
done

# copy branding independent parts
for i in $INSTSYS_PARTS $BOOT_PARTS ; do
  [ -e images/$i ] && cp -r images/$i $DESTDIR/CD1/boot/$ARCH
done

# xen kernel
for i in images/vmlinuz-+([^.]) ; do
  [ -d "$i" ] && cp "$i/linux" $DESTDIR/CD1/boot/$ARCH/`basename $i`
done

# biostest goes to 'loader' dir
if [ -e $DESTDIR/CD1/boot/$ARCH/biostest ] ; then
  mv $DESTDIR/CD1/boot/$ARCH/biostest $DESTDIR/CD1/boot/$ARCH/loader/biostest
fi

# copy branding dependent parts
for theme in $THEMES ; do
  for i in $INSTSYS_PARTS $BOOT_PARTS ; do
    for ii in images/$theme/$i ; do
      [ -e $ii ] && cp -r $ii $DESTDIR/branding/$theme/CD1/boot/$ARCH
    done
  done

  if [ -d images/$theme/EFI ] ; then
    mkdir -p $DESTDIR/branding/$theme/CD1/EFI/BOOT
    cp -r images/$theme/EFI/EFI/BOOT/* $DESTDIR/branding/$theme/CD1/EFI/BOOT
  fi

  cp images/$theme/$theme $DESTDIR/branding/$theme/CD1/boot/$ARCH
  ln -s $theme $DESTDIR/branding/$theme/CD1/boot/$ARCH/branding

  # xen initrd
  for i in images/$theme/initrd-+([^.]) ; do
    [ -f "$i" ] && cp $i $DESTDIR/branding/$theme/CD1/boot/$ARCH
  done

  # might be missing if theme does not really exist
  mkdir -p $DESTDIR/branding/$theme/CD1/boot/$ARCH/loader

  # initrd goes to 'loader' dir
  if [ -e $DESTDIR/branding/$theme/CD1/boot/$ARCH/initrd ] ; then
    mv $DESTDIR/branding/$theme/CD1/boot/$ARCH/initrd $DESTDIR/branding/$theme/CD1/boot/$ARCH/loader/initrd
  fi

  # cp etc/README $DESTDIR/branding/$theme/CD1/boot/$ARCH
  # recode utf8..ibmpc <$DESTDIR/branding/$theme/CD1/boot/$ARCH/README >$DESTDIR/branding/$theme/CD1/boot/$ARCH/README.DOS
  # cp etc/LIESMICH $DESTDIR/branding/$theme/CD1/boot/$ARCH
  # recode utf8..ibmpc <$DESTDIR/branding/$theme/CD1/boot/$ARCH/LIESMICH >$DESTDIR/branding/$theme/CD1/boot/$ARCH/LIESMICH.DOS

  # create boot floppies and put them in ftp tree
  if [ "$WITH_FLOPPY" = 1 ] ; then
    mkdir -p $DESTDIR/branding/$theme/FTP/boot/$ARCH/floppy
    rm -rf tmp/floppy-$theme
    mkdir -p tmp/floppy-$theme
    cp -a $DESTDIR/CD1/boot/$ARCH/loader/* $DESTDIR/branding/openSUSE/CD1/boot/$ARCH/loader/* tmp/floppy-$theme
    $DESTDIR/branding/$theme/CD1/boot/$ARCH/mkbootdisk --syslinux=tmp/base/usr/bin/syslinux --out=$DESTDIR/branding/$theme/FTP/boot/$ARCH/floppy/bootdisk tmp/floppy-$theme
  fi

done

mkdir -p $DESTDIR/usr/share
cp images/mini-iso-rmlist $DESTDIR/usr/share

